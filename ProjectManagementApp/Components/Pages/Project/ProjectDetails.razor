@page "/projects/details/{Id}"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using ProjectManagementApp.Components.Shared
@using ProjectManagementApp.Data
@attribute [Authorize]
@inject ApplicationDbContext DbContext
@inject NavigationManager NavigationManager
@inject UserManager<ApplicationUser> UserManager


<PageTitle>@Project?.Name - Details</PageTitle>

<MudText Typo="Typo.h1" Class="px-6">@Project?.Name</MudText>

<MudPaper Class="my-6 pa-8">
    <LabeledText Label="Description" Text="@Project!.Description" />
    <LabeledText Label="Owner" Text="@(User?.UserName ?? "")" />
    <LabeledText Label="ProjectedStart" Text="@Project!.ProjectedStart.ToString()" />
    <LabeledText Label="ProjectedEnd" Text="@Project!.ProjectedEnd.ToString()" />
</MudPaper>

<MudButton Variant="Variant.Filled" Color="Color.Primary" Class="my-4" @onclick="(() => Update(Project?.Id!))">Update</MudButton>


@code {
    [Parameter]
    public string? Id { get; set; }

    public Project? Project { get; set; }
    public ApplicationUser? User { get; set; }

    protected override void OnInitialized()
    {
        Project = DbContext.Projects.FirstOrDefault(p => p.Id == Id);
        
        ProjectOwner? owner = DbContext.ProjectOwners
            .OrderByDescending(o => o.CreatedOn)
            .FirstOrDefault(o => o.ProjectId == Id);

        if (owner != null)
            User = UserManager.Users.FirstOrDefault(u => u.Id == owner.UserId);
    }

    public void Update(string id) => NavigationManager.NavigateTo($"/projects/edit/{id}");
}